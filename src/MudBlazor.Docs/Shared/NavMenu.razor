@using System.Linq
@using MudBlazor.Docs.Extensions

<MudNavMenu Class="mudblazor-navmenu">
    <div class="docs-nav-fader"></div>
    
    <MudNavGroup Title="Getting Started"
                 Icon="@Icons.Material.School"
                 Expanded="@(_section == "getting-started")"
                 ExpandIcon="@Icons.Material.ExpandMore" Style="margin-top: 40px;">
        @foreach (var link in MenuService.GettingStarted)
        {
            <MudNavLink Href="@link.Href">@link.Title</MudNavLink>
        }
    </MudNavGroup>

    @*COMPONENTS*@
    <MudNavGroup Title="Components"
                 Icon="@Icons.Material.Dashboard"
                 Expanded="@(_section == "components")"
                 ExpandIcon="@Icons.Material.ExpandMore">
        @foreach (var item in MenuService.Components)
        {
            if (item.IsNavGroup)
            {
                <MudNavGroup Title="@item.Name" Expanded="@(IsSubGroupExpanded(item))" ExpandIcon="@Icons.Material.ExpandMore">
                    @foreach (var subItem in item.GroupItems.Elements) 
                    {
                        string href = $"components/{subItem.Link}";
                        <MudNavLink Href="@href">@subItem.Name</MudNavLink>
                    }
                </MudNavGroup>
            }
            else
            {
                string href = $"components/{item.Link}";
                <MudNavLink Href="@href">@item.Name</MudNavLink>
            }
        }
    </MudNavGroup>
    
    @*API*@
    <MudNavGroup Title="API"
                 Icon="@Icons.Material.Api"
                 Expanded="@(_section == "api")" 
                 ExpandIcon="@Icons.Material.ExpandMore">
        @foreach (var item in MenuService.Api)
        {
            <MudNavLink Href="@ApiLink.GetApiLinkFor(item.Component)">@item.Name</MudNavLink>
        }
    </MudNavGroup>
    
    @*FEATURES*@
    <MudNavGroup Title="Features"
                 Icon="@Icons.Material.DeveloperBoard"
                 Expanded="@(_section == "features")"
                 ExpandIcon="@Icons.Material.ExpandMore">
        @foreach (var link in MenuService.Features)
        {
            <MudNavLink Href="@link.Href">@link.Title</MudNavLink>
        }
    </MudNavGroup>

    @*CUSTOMIZATION*@
    <MudNavGroup Title="Customization"
                 Icon="@Icons.Material.Handyman"
                 Expanded="@(_section == "customization")"
                 ExpandIcon="@Icons.Material.ExpandMore">
        <MudNavLink Href="customization/default-theme">Default Theme</MudNavLink>
        <MudNavGroup Title="Theming" Expanded="true" ExpandIcon="@Icons.Material.ExpandMore">
            @foreach (var link in MenuService.Customization)
            {
                <MudNavLink Href="@link.Href">@link.Title</MudNavLink>
            }
        </MudNavGroup>
    </MudNavGroup>

    @*ABOUT*@
    <MudNavGroup Title="About" Icon="@Icons.Custom.MudBlazor" Expanded="@(_section=="project")" ExpandIcon="@Icons.Material.ExpandMore">
       @foreach (var link in MenuService.About)
       {
            <MudNavLink Href="@link.Href">@link.Title</MudNavLink>
       }
       
    </MudNavGroup>
</MudNavMenu>
<div class="docs-nav-filler"></div>

@code {
    DocsComponents DocsComponents = new DocsComponents();
    DocsComponents DocsComponentsAPI = new DocsComponents();

    //sections are "getting-started","components", "api", ...
    string _section;
    //component links are the part of the url that tells us what component is featured
    string _componentLink;
    protected override void OnInitialized()
    {
        _section = NavMan.GetSection();
        _componentLink = NavMan.GetComponentLink();

        AddDocsComponents();
        AddDocsComponentsApi();
    }

    void AddDocsComponents()
    {
        DocsComponents.AddItem("Container", typeof(MudContainer))
                                    .AddItem("Grid", typeof(MudGrid))
                                    .AddItem("Hidden", typeof(MudHidden))
                                    .AddNavGroup("Buttons", false, new DocsComponents()
                                        .AddItem("Button", typeof(MudButton))
                                        .AddItem("IconButton", typeof(MudIconButton))
                                        .AddItem("ToggleIconButton", typeof(MudToggleIconButton))
                                        .AddItem("Button FAB", typeof(MudFab)))
                                    .AddNavGroup("Charts", false, new DocsComponents()
                                            .AddItem("Donut chart", typeof(MudComponent))
                                            .AddItem("Line chart", typeof(MudComponent))
                                            .AddItem("Pie chart", typeof(MudComponent)))
                                    .AddItem("Checkbox", typeof(MudCheckBox<T>))
                                    .AddItem("Chips", typeof(MudChip))
                                    .AddItem("ChipSet", typeof(MudChipSet))
                                    .AddItem("Badge", typeof(MudBadge))
                                        .AddNavGroup("Form Inputs & controls", false, new DocsComponents()
                                            .AddItem("Radio", typeof(MudRadio))
                                            .AddItem("Select", typeof(MudSelect<T>))
                                            .AddItem("Slider", typeof(MudSlider<T>))
                                            .AddItem("Switch", typeof(MudSwitch<T>))
                                            .AddItem("Text Field", typeof(MudTextField<T>))
                                            .AddItem("Form", typeof(MudForm))
                                            .AddItem("Autocomplete", typeof(MudAutocomplete<T>))
                                            .AddItem("Field", typeof(MudField))
                                        )
                                    .AddItem("AppBar", typeof(MudAppBar))
                                    .AddItem("Drawer", typeof(MudDrawer))
                                    .AddItem("Link", typeof(MudLink))
                                    .AddItem("Menu", typeof(MudMenu))
                                    .AddItem("Nav Menu", typeof(MudNavMenu))
                                    .AddItem("Tabs", typeof(MudTabs))
                                        .AddNavGroup("Pickers", false, new DocsComponents()
                                            .AddItem("Date Picker", typeof(MudDatePicker))
                                            .AddItem("Time Picker", typeof(MudTimePicker))
                                        )
                                    .AddItem("Progress", typeof(MudProgressCircular))
                                    .AddItem("Dialog", typeof(MudDialog))
                                    .AddItem("Snackbar", typeof(MudSnackbarProvider))
                                    .AddItem("Avatar", typeof(MudAvatar))
                                    .AddItem("Alert", typeof(MudAlert))
                                    .AddItem("Card", typeof(MudCard))
                                    .AddItem("Divider", typeof(MudDivider))
                                    .AddItem("Expansion Panel", typeof(MudExpansionPanel))
                                    .AddItem("Icons", typeof(MudIcon))
                                    .AddItem("List", typeof(MudList))
                                    .AddItem("Paper", typeof(MudPaper))
                                    .AddItem("Rating", typeof(MudRating))
                                    .AddItem("Skeleton", typeof(MudSkeleton))
                                    .AddItem("Table", typeof(MudTable<T>))
                                    .AddItem("Simple Table", typeof(MudSimpleTable))
                                    .AddItem("Tooltip", typeof(MudTooltip))
                                    .AddItem("Typography", typeof(MudText))
                                    .AddItem("Overlay", typeof(MudOverlay))
                                    .AddItem("Highlighter", typeof(MudHighlighter))
                                    .AddItem("Element", typeof(MudElement))
                                    .AddItem("FileUpload", typeof(MudElement))
                                    .AddItem("TreeView", typeof(MudTreeView));


    }

    void AddDocsComponentsApi()
    {
        foreach (var item in DocsComponents.ToList())
        {
            if (item.IsNavGroup)
            {
                foreach (var ApiItem in item.GroupItems.ToList())
                {
                    DocsComponentsAPI.AddItem(ApiItem.Name, ApiItem.Component);
                }
            }
            else
            {
                DocsComponentsAPI.AddItem(item.Name, item.Component);
            }
        }
    }

    bool IsSubGroupExpanded(MudComponent item)
    {
        #region comment about is subgroup expanded
        //if the route contains any of the links of the subgroup, then the subgroup
        //should be expanded
        //Example:
        //subgroup: form inputs & controls
        //the subgroup "form inputs & controls" should be open if the current page has in the route
        //a component included in the subgroup elements, that in this case are autocomplete, form, field,
        //radio, select...
        //this route `/components/autocomplete` should open the subgroup "form inputs..."
        #endregion
        return item.GroupItems.ToList().Any(i => i.Link ==_componentLink);
    }

