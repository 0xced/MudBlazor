@inherits LayoutComponentBase
@inject NavigationManager NavMan
@using MudBlazor.Theme.Defaults

<MudThemeProvider />
<MudThemeProviderNew Theme="currentTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout RightToLeft="@_rightToLeft">
    <MudAppBar Elevation="25">
        <MudIconButton Icon="@Icons.Material.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="@GetTrackedIn()">Mudblazor</MudText>
        <MudAppBarSpacer />
        <MudTooltip Text="Toggle light/dark theme">
            <MudIconButton Icon="@Icons.Material.Brightness4" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
        </MudTooltip>
        <MudTooltip Text="GitHub repository">
            <MudIconButton Icon="@Icons.Custom.GitHub" Color="Color.Inherit" Link="https://github.com/Garderoben/MudBlazor" Target="_blank" />
        </MudTooltip>
        <MudTooltip Text="Toggle right-to-left/left-to-right">
            <MudIconButton Icon="@Icons.Material.FormatTextdirectionRToL" Color="Color.Inherit" OnClick="@((e) => RightToLeftToggle())" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer Open="@_drawerOpen" Elevation="25" Class="mudblazor-appbar-band">
        <MudDrawerHeader Class="mudblazor-brand" LinkToIndex="true">
            <MudBlazorLogo />
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mudblazor-main-content">
        @Body
    </MudMainContent>
</MudLayout>

@code {

    bool _drawerOpen = false;
    bool _rightToLeft = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void RightToLeftToggle()
    {
        _rightToLeft = !_rightToLeft;
    }

    protected override void OnInitialized()
    {
        currentTheme = defaultTheme;
        GetTrackedIn();
    }

    void DarkMode()
    {
        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
        }
        else
        {
            currentTheme = defaultTheme;
        }
    }

    public bool _trackedIn { get; set; }
    public string MudBlazorLogoText { get; set; }

    public string GetTrackedIn()
    {
        if (_trackedIn && NavMan.BaseUri == NavMan.Uri)
        {
            _trackedIn = !_trackedIn;
            MudBlazorLogoText = "mudblazor-appbar-brand-text track-out";
        }
        else if (!_trackedIn && NavMan.BaseUri != NavMan.Uri)
        {
            _trackedIn = !_trackedIn;
            MudBlazorLogoText = "mudblazor-appbar-brand-text track-in";
        } else if (NavMan.BaseUri == NavMan.Uri)
        {
            MudBlazorLogoText = "mudblazor-appbar-brand-text mud-hide";
        }
        return MudBlazorLogoText;
    }

    MudTheme currentTheme = new MudTheme();
    MudTheme defaultTheme = new MudTheme();

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Background = "#343a41",
            Surface = "#3a424e",
            DrawerBackground = "#3a424e",
            DrawerText = "#8389a2",
            AppbarBackground = "#3a424e",
            AppbarText = "#8389a2",
            TextPrimary = "#dee2e6"
        }
    };
}

