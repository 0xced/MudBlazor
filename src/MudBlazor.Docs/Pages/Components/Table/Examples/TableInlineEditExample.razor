@using MudBlazor.Docs.Data
@namespace MudBlazor.Docs.Examples

<MudTable InlineEdit="true" Items="@PeriodicTable.GetElements()" Dense="@dense" Hover="@hover" Filter="new Func<Element,bool>(FilterFunc)" @bind-SelectedItem="selected_item">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="search_string" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Search" IconSize="Size.Medium"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:50px;" />
        <col style="width:80px;" />
        <col style="width:50%;" />
        <col />
        <col />
        <col style="width:50px;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>
            <MudTextField @bind-Value="@context.Sign" />
        </MudTd>
        <MudTd>
            <MudTextField @bind-Value="@context.Name" />
        </MudTd>
        <MudTd>
            <MudTextField @bind-Value="@context.Position" />
        </MudTd>
        <MudTd>
            <MudTextField @bind-Value="@context.Molar" />
        </MudTd>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
<MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
<MudText Inline="true">Selected: @selected_item?.Name</MudText>

@code {
    bool dense = false;
    bool hover = true;
    bool fixed_header = false;
    string search_string = "";
    Element selected_item = null;
    HashSet<Element> selected_items = new HashSet<Element>();

    bool FilterFunc(Element element)
    {
        if (string.IsNullOrWhiteSpace(search_string))
            return true;
        if (element.Sign.Contains(search_string))
            return true;
        if (element.Name.Contains(search_string))
            return true;
        if ($"{element.Number} {element.Position} {element.Molar}".Contains(search_string))
            return true;
        return false;
    }
}
