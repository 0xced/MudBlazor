@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChart</span> <span class="htmlAttributeName">ChartType</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">ChartType</span><span class="enumValue">.Line</span><span class="quot">&quot;</span> <span class="htmlAttributeName">ChartSeries</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="sharpVariable"><span class="atSign">&#64;</span>Series</span><span class="quot">&quot;</span> <span class="htmlAttributeName">XAxisLabels</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="sharpVariable"><span class="atSign">&#64;</span>XAxisLabels</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Width</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">650</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Height</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">350</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span><span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChart</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {

    <span class="keyword">public</span> List&lt;ChartSeries&gt; Series = <span class="keyword">new</span> List&lt;ChartSeries&gt;();
    <span class="keyword">public</span> <span class="keyword">string</span>[] XAxisLabels = {<span class="string">&quot;00:00&quot;</span>, <span class="string">&quot;01:00&quot;</span>, <span class="string">&quot;02:00&quot;</span>, <span class="string">&quot;03:00&quot;</span>, <span class="string">&quot;04:00&quot;</span>, <span class="string">&quot;05:00&quot;</span>, <span class="string">&quot;06:00&quot;</span>};

    <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> OnInitialized()
    {
        <span class="keyword">double</span>[] mySerieData1 = { <span class="number">31</span>, <span class="number">40</span>, <span class="number">28</span>, <span class="number">51</span>, <span class="number">42</span>, <span class="number">109</span>, <span class="number">100</span> };
        <span class="keyword">double</span>[] mySerieData2 = { <span class="number">11</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">32</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">41</span> };

        ChartSeries Serie1 = <span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Serie 1&quot;</span>, Data = mySerieData1 };
        Series.Add(Serie1);

        ChartSeries Serie2 = <span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Serie 2&quot;</span>, Data = mySerieData2 };
        Series.Add(Serie2);
        StateHasChanged();
    }
}
</pre></div>
</div>
