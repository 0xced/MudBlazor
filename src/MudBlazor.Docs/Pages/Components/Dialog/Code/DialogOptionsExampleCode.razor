@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="atSign">&#64;</span>inject IDialogService Dialog

<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">Variant</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Variant</span><span class="enumValue">.Outlined</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Primary</span><span class="quot">&quot;</span> <span class="htmlAttributeName"><span class="atSign">&#64;</span>onclick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">OpenClodebuttonDialog</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>With Close Button<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">Variant</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Variant</span><span class="enumValue">.Outlined</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Secondary</span><span class="quot">&quot;</span> <span class="htmlAttributeName"><span class="atSign">&#64;</span>onclick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">OpenBackDropDialog</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>With No Backdrop click<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {
    <span class="keyword">async</span> Task OpenClodebuttonDialog()
    {
        <span class="keyword">var</span> Options = <span class="keyword">new</span> DialogOptions() { CloseButton = <span class="keyword">true</span> };
        <span class="keyword">var</span> Parameters = <span class="keyword">new</span> DialogParameters();
        Parameters.Add(<span class="string">&quot;Message&quot;</span>, <span class="string">&quot;This dialog has a close button that is set either globally or per dialog.&quot;</span>);
        <span class="keyword">var</span> userSelect = Dialog.Show&lt;DialogDialogOptionExample&gt;(<span class="string">&quot;With close button&quot;</span>, Parameters, Options);
    }

    <span class="keyword">async</span> Task OpenBackDropDialog()
    {
        <span class="keyword">var</span> Options = <span class="keyword">new</span> DialogOptions() { DisableBackdropClick = <span class="keyword">true</span> };
        <span class="keyword">var</span> Parameters = <span class="keyword">new</span> DialogParameters();
        Parameters.Add(<span class="string">&quot;Message&quot;</span>, <span class="string">&quot;This dialog has the backdrop click disabled and the user need to take an action within the dialog.&quot;</span>);
        <span class="keyword">var</span> userSelect = Dialog.Show&lt;DialogDialogOptionExample&gt;(<span class="string">&quot;With no backdrop click&quot;</span>, Parameters, Options);
    }
}
</pre></div>
</div>
