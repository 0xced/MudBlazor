@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">div</span> <span class="htmlAttributeName">class</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">d-flex flex-column align-center</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>
    <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudRating</span> <span class="htmlAttributeName"><span class="atSign">&#64;</span>bind-SelectedValue</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">selectedVal</span><span class="quot">&quot;</span> <span class="htmlAttributeName">HoveredValueChanged</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">HandleHoveredValueChanged</span><span class="quot">&quot;</span> <span class="htmlTagDelimiter">/&gt;</span>
    <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudText</span> <span class="htmlAttributeName">Typo</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Typo</span><span class="enumValue">.subtitle2</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Class</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">deep-purple-text mt-2</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span><span class="atSign">&#64;</span>GetLabelText()<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudText</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">div</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {
    <span class="keyword">private</span> <span class="keyword">int</span> selectedVal = <span class="number">0</span>;
    <span class="keyword">private</span> <span class="keyword">int</span>? activeVal;

    <span class="keyword">private</span> <span class="keyword">void</span> HandleHoveredValueChanged(<span class="keyword">int</span>? val) =&gt; activeVal = val;

    <span class="keyword">private</span> <span class="keyword">string</span> GetLabelText() =&gt; (activeVal ?? selectedVal) <span class="keyword">switch</span>
    {
        <span class="number">1</span> =&gt; <span class="string">&quot;Very bad&quot;</span>,
        <span class="number">2</span> =&gt; <span class="string">&quot;Bad&quot;</span>,
        <span class="number">3</span> =&gt; <span class="string">&quot;Sufficient&quot;</span>,
        <span class="number">4</span> =&gt; <span class="string">&quot;Good&quot;</span>,
        <span class="number">5</span> =&gt; <span class="string">&quot;Awesome!&quot;</span>,
        _ =&gt; <span class="string">&quot;Rate our product!&quot;</span>
    };
}
</pre></div>
</div>
