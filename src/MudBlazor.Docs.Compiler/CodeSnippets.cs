using System;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace MudBlazor.Docs.Compiler
{
    public class CodeSnippets
    {
        public bool Execute()
        {
            var paths = new Paths();
            bool success = true;
            try
            {          
                using (var f = File.Create(paths.SnippetsFilePath))
                using (var w = new StreamWriter(f) { NewLine = "\n" })
                {
                    w.WriteLine("// NOTE: this file is autogenerated. Any changes will be overwritten!");
                    w.WriteLine(
                        @"namespace MudBlazor.Docs.Models
    {
        public static partial class Snippets
        {
    ");
                    foreach (var entry in Directory.EnumerateFiles(paths.DocsDirPath, "*.razor", SearchOption.AllDirectories)
                        .OrderBy(e => e.Replace("\\","/"), StringComparer.Ordinal))
                    {
                        var filename = Path.GetFileName(entry);
                        var componentName = Path.GetFileNameWithoutExtension(filename);
                        if (!componentName.EndsWith("Example"))
                            continue;
                        // Console.WriteLine("Found code snippet: " + component_name);
                        w.WriteLine($"public const string {componentName} = @\"{EscapeComponentSource(entry)}\";\n");
                    }

                    w.WriteLine(
                        @"    }
    }
    ");
                    w.Flush();
                }
            }
            catch (Exception e)
            {
                Console.WriteLine($"Error generating {paths.SnippetsFilePath} : {e.Message}");
                success = false;
            }

            return success;
        }

        private static string EscapeComponentSource(string path)
        {
            var source = File.ReadAllText(path, Encoding.UTF8);
            //source = Regex.Replace(source, "@using .+?\n", "");
            source = Regex.Replace(source, "@(namespace|layout|page) .+?\n", "");
            return source.Replace("\"", "\"\"").Trim();
        }
    }
}