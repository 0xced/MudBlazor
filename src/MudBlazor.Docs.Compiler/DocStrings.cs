using System;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using Microsoft.AspNetCore.Components;
namespace MudBlazor.Docs.Compiler
{
    public class DocStrings
    {
        public bool Execute()
        {
            var paths = new Paths();
            bool success = true;
            try
            {                         
                using (var f = File.Create(paths.DocsStringsFilePath))
                using (var w = new StreamWriter(f) { NewLine = "\n" })
                {
                    w.WriteLine("// NOTE: this file is autogenerated. Any changes will be overwritten!");
                    w.WriteLine(
                        @"namespace MudBlazor.Docs.Models
    {
        public static partial class DocStrings
        {
    ");
                    var assembly = typeof(MudText).Assembly;
                    foreach (var type in assembly.GetTypes().OrderBy(t => GetSaveTypename(t)))
                    {
                        foreach (var info in type.GetPropertyInfosWithAttribute<ParameterAttribute>())
                        {
                            var doc = info.GetDocumentation();
                            doc = Regex.Replace(doc ?? "", @"</?.+?>", "");
                            w.WriteLine($"public const string {GetSaveTypename(type).TrimEnd('_')}_{info.Name} = @\"{EscapeDescription(doc)}\";\n");
                        }
                    }

                    w.WriteLine(
                        @"    }
    }
    ");
                    w.Flush();
                }
            }
            catch (Exception e)
            {
                Console.WriteLine($"Error generating {paths.DocsStringsFilePath} : {e.Message}");
                success = false;
            }

            return success;
        }

        private static string GetSaveTypename(Type t) => Regex.Replace(t.ConvertToCSharpSource(), @"[\.<>]", "_");

        private static string EscapeDescription(string doc)
        {
            return doc.Replace("\"", "\"\"").Trim();
        }
    }
}